@startuml OAuth2 Flow with PKCE and Error Handling

actor "User Browser" as Browser
participant "Spring Application" as App
participant "Authorization Server" as Auth
participant "Token Endpoint" as Token
participant "JWKS Endpoint" as JWKS

== Initial Login Request ==
Browser -> App: Click "Sign in with ScotAccount"
note right of App
  Generate PKCE:
  - code_verifier
  - code_challenge
end note
App -> App: Store state & PKCE in session

== Authorization Redirect ==
App --> Browser: 302 Redirect to /authorize
Browser -> Auth: GET /authorize with:\n- client_id\n- response_type=code\n- redirect_uri\n- scope=openid\n- state\n- code_challenge\n- code_challenge_method=S256

== User Authentication ==
Auth -> Browser: Show login form
alt Successful Authentication
    Browser -> Auth: Submit credentials
    Auth -> Browser: Show consent screen
    Browser -> Auth: Approve consent
else Invalid Credentials
    Browser -> Auth: Submit invalid credentials
    Auth --> Browser: Show error message
    Browser -> Auth: Submit correct credentials
else User Denies Consent
    Browser -> Auth: Deny consent
    Auth --> Browser: 302 Redirect to app with error
    Browser -> App: GET /?error=access_denied
    App --> Browser: Show error page
end

== Authorization Code Return ==
alt Successful Authorization
    Auth --> Browser: 302 Redirect to callback URL with:\n- authorization_code\n- state
    Browser -> App: GET /login/oauth2/code/scotaccount
else Invalid/Expired State
    App -> App: State validation fails
    App --> Browser: 302 Redirect to /?error=invalid_state
end

== Token Exchange ==
App -> App: Validate state
alt Successful Token Exchange
    App -> Token: POST /token with:\n- grant_type=authorization_code\n- code\n- redirect_uri\n- code_verifier
    Token --> App: Return tokens:\n- access_token\n- id_token
else Invalid/Expired Code
    App -> Token: POST /token
    Token --> App: Return error: invalid_grant
    App --> Browser: 302 Redirect to /?error=invalid_token
else Invalid PKCE
    App -> Token: POST /token
    Token --> App: Return error: invalid_grant
    App --> Browser: 302 Redirect to /?error=pkce_failure
end

== Token Validation ==
alt Successful Validation
    App -> JWKS: GET /jwks
    JWKS --> App: Return public keys
    App -> App: Validate tokens using JWKS
else Token Validation Failure
    App -> JWKS: GET /jwks
    JWKS --> App: Return public keys
    App -> App: Token validation fails
    App --> Browser: 302 Redirect to /?error=invalid_token
end

== Token Processing ==
alt Successful Processing
    App -> App: Process tokens in LoggedInController:\n1. Decode access_token\n2. Decode id_token\n3. Store in session
else Token Processing Error
    App -> App: Token processing fails
    note right of App
      Possible errors:
      - Malformed token
      - Missing claims
      - Invalid signature
    end note
    App -> App: Log error details
    App --> Browser: 302 Redirect to /?error=token_processing_error
end

== Final Redirect ==
alt Successful Flow
    App --> Browser: 302 Redirect to /
    Browser -> App: GET /
    App --> Browser: Return home page with user info
else Error Flow
    Browser -> App: GET /?error=<error_type>
    App --> Browser: Show error page with:\n- Error message\n- Error type\n- Retry option
end

@enduml 